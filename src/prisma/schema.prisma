generator clinet {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model blog {
  post_uuid           String   @id @db.Uuid
  title               String   @db.VarChar(150)
  description         String   @db.VarChar(300)
  date_of_last_modify DateTime @db.Date
  cover_image         String?  @db.VarChar(100)
  category            String   @db.VarChar(50)
  tags                String[]
  link                String   @db.VarChar(100)
}

model blogg {
  post_uuid           String   @id @db.Uuid
  title               String   @db.VarChar(50)
  description         String   @db.VarChar(100)
  date_of_last_modify DateTime @db.Date
  cover_image         String?  @db.VarChar(100)
  category            String   @db.VarChar(50)
  content             String
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}
